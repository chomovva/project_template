/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$about-us-name: 'about-us';
$about-us-x: 60px;
$about-us-y: 0px;
$about-us-offset-x: -60px;
$about-us-offset-y: 0px;
$about-us-width: 33px;
$about-us-height: 43px;
$about-us-total-width: 127px;
$about-us-total-height: 99px;
$about-us-image: '../images/icon.png';
$about-us: (60px, 0px, -60px, 0px, 33px, 43px, 127px, 99px, '../images/icon.png', 'about-us', );
$audio-cat-name: 'audio-cat';
$audio-cat-x: 0px;
$audio-cat-y: 49px;
$audio-cat-offset-x: 0px;
$audio-cat-offset-y: -49px;
$audio-cat-width: 33px;
$audio-cat-height: 50px;
$audio-cat-total-width: 127px;
$audio-cat-total-height: 99px;
$audio-cat-image: '../images/icon.png';
$audio-cat: (0px, 49px, 0px, -49px, 33px, 50px, 127px, 99px, '../images/icon.png', 'audio-cat', );
$audio-name: 'audio';
$audio-x: 93px;
$audio-y: 33px;
$audio-offset-x: -93px;
$audio-offset-y: -33px;
$audio-width: 26px;
$audio-height: 37px;
$audio-total-width: 127px;
$audio-total-height: 99px;
$audio-image: '../images/icon.png';
$audio: (93px, 33px, -93px, -33px, 26px, 37px, 127px, 99px, '../images/icon.png', 'audio', );
$bag-name: 'bag';
$bag-x: 0px;
$bag-y: 0px;
$bag-offset-x: 0px;
$bag-offset-y: 0px;
$bag-width: 60px;
$bag-height: 49px;
$bag-total-width: 127px;
$bag-total-height: 99px;
$bag-image: '../images/icon.png';
$bag: (0px, 0px, 0px, 0px, 60px, 49px, 127px, 99px, '../images/icon.png', 'bag', );
$video-name: 'video';
$video-x: 93px;
$video-y: 0px;
$video-offset-x: -93px;
$video-offset-y: 0px;
$video-width: 34px;
$video-height: 33px;
$video-total-width: 127px;
$video-total-height: 99px;
$video-image: '../images/icon.png';
$video: (93px, 0px, -93px, 0px, 34px, 33px, 127px, 99px, '../images/icon.png', 'video', );
$spritesheet-width: 127px;
$spritesheet-height: 99px;
$spritesheet-image: '../images/icon.png';
$spritesheet-sprites: ($about-us, $audio-cat, $audio, $bag, $video, );
$spritesheet: (127px, 99px, '../images/icon.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
